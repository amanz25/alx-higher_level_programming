>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

success criteria
>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]
>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]

error criteria
>>> print(matrix_mul("", [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(matrix_mul([[1, 2], [3, 4]], 2))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> print(matrix_mul([1,2], [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> print(matrix_mul([[1, 2], [3, 4]], [""]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> print(matrix_mul([], [[1, 2], [3, 4]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(matrix_mul([[]], [[3, 4], [1,2]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(matrix_mul([[1, 2], [3, 4]], []))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> print(matrix_mul([[3, 4], [1,2]], [[]]))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> print(matrix_mul([["", 2], [3, 4]], [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, ""]]))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> print(matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 5, 8]]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2, 5], [3, 5, 8], [5, 8, 9]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
