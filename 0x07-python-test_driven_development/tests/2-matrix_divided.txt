>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

sucess criteria
>>> print(matrix_divided([[1,2,3], [4,5,6]], 2))
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> print(matrix_divided([[1,2,3]], 2))
[[0.5, 1.0, 1.5]]

error criteria
>>> print(matrix_divided(None, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided(2, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1,2]], ""))
Traceback (most recent call last):
TypeError: div must be a number

>>> print(matrix_divided([[1,2],[1,2,3]], 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided([[1,2],[1,2]], 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> print(matrix_divided([[],[]], 5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1,2],""], 5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1,5],[5, "test"]], 5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

