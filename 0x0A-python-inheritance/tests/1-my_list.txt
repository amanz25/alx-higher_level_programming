The ``1-my_list`` module test
-------------------------------

Using ``MyList``
-------------------------------

import the module
	>>> MyList = __import__('1-my_list').MyList

check inheritance
        >>> issubclass(MyList, list)
        True

Check module docstring:
	>>> len(__import__("1-my_list").__doc__) > 1
	True

Check class docstring:
        >>> len(__import__("1-my_list").MyList.__doc__) > 1
        True

Check method docstring:
	>>> len(__import__("1-my_list").MyList.print_sorted.__doc__) > 1
	True

initalize the obj
	>>> listObj = MyList()
	>>> listObj.print_sorted()
	[]

add number to the list
	>>> listObj.append(10)
	>>> listObj.append(5)
	>>> listObj.append(15)
	>>> listObj.append(1)
	>>> listObj.append(8)

print the list
	>>> print(listObj)
	[10, 5, 15, 1, 8]

print the list in a sorted way
	>>> listObj.print_sorted()
	[1, 5, 8, 10, 15]

append other number to the list
	>>> listObj.append(-1)
	>>> listObj.append(0)

print the list in a sorted way
	>>> listObj.print_sorted()
	[-1, 0, 1, 5, 8, 10, 15]

pass 2 arguments to the print_sorted function
	>>> listObj.print_sorted(listObj, listObj)
	Traceback (most recent call last):
	TypeError: print_sorted() takes 1 positional argument but 3 were given
